#!/bin/bash -e

[ -z "$__PROMPT_INDENT" ] && __PROMPT_INDENT='1'
[ -z "$__CD_LS"         ] && __CD_LS='1'
[ -z "$__EDITOR"        ] && __EDITOR='nano'
[ -z "$__XEDITOR"       ] && __XEDITOR='kwrite'
[ -z "$__XEDITOR2"      ] && __XEDITOR2='kate'

# colors
C_NONE=$'\e[39m'
C_BLACK=$'\e[30m'
C_RED=$'\e[31m'
C_GREEN=$'\e[32m'
C_YELLOW=$'\e[33m'
C_BLUE=$'\e[34m'
C_MAGENTA=$'\e[35m'
C_CYAN=$'\e[36m'
C_LGRAY=$'\e[37m'
C_DGRAY=$'\e[90m'
C_LRED=$'\e[91m'
C_LGREEN=$'\e[92m'
C_LYELLOW=$'\e[93m'
C_LBLUE=$'\e[94m'
C_LMAGENTA=$'\e[95m'
C_LCYAN=$'\e[96m'
C_WHITE=$'\e[97m'
B_NONE=$'\e[49m'
B_BLACK=$'\e[40m'
B_RED=$'\e[41m'
B_GREEN=$'\e[42m'
B_YELLOW=$'\e[43m'
B_BLUE=$'\e[44m'
B_MAGENTA=$'\e[45m'
B_CYAN=$'\e[46m'
B_LGRAY=$'\e[47m'
B_DGRAY=$'\e[100m'
B_LRED=$'\e[101m'
B_LGREEN=$'\e[102m'
B_LYELLOW=$'\e[103m'
B_LBLUE=$'\e[104m'
B_LMAGENTA=$'\e[105m'
B_LCYAN=$'\e[106m'
B_WHITE=$'\e[107m'
BC_NONE="${B_NONE}${C_NONE}"
BC_RESET=$'\e[0m'
F_BOLD_ON=$'\e[1m'
F_BOLD_OFF=$'\e[21m'
F_DIM_ON=$'\e[2m'
F_DIM_OFF=$'\e[22m'
F_ITALIC_ON=$'\e[3m'
F_ITALIC_OFF=$'\e[23m'
F_UNDERLINE_ON=$'\e[4m'
F_UNDERLINE_OFF=$'\e[24m'
F_BLINKING_ON=$'\e[5m'
F_BLINKING_OFF=$'\e[25m'
F_REVERSE_ON=$'\e[7m'
F_REVERSE_OFF=$'\e[27m'
F_HIDDEN_ON=$'\e[8m'
F_HIDDEN_OFF=$'\e[28m'
F_STRIKETHROUGH_ON=$'\e[9m'
F_STRIKETHROUGH_OFF=$'\e[29m'
F_ALL_OFF="${F_BOLD_OFF}${F_DIM_OFF}${F_ITALIC_OFF}${F_UNDERLINE_OFF}${F_BLINKING_OFF}${F_REVERSE_OFF}${F_HIDDEN_OFF}${F_STRIKETHROUGH_OFF}"
F_RESET="${F_ALL_OFF}${BC_RESET}"
T_CURSOR_OFF=$'\e[?25l'
T_CURSOR_ON=$'\e[?25h'

export LS_COLORS="${LS_COLORS}:so=01;37;42:"
bind 'set show-all-if-ambiguous on'

function trim {
  var="$@"
  var="${var#"${var%%[![:space:]]*}"}"
  var="${var%"${var##*[![:space:]]}"}"
  echo -n "${var}"
}

if [ -f /usr/lib/git-core/git-sh-prompt ]; then
    . /usr/lib/git-core/git-sh-prompt
fi

GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWUNTRACKEDFILES=1
GIT_PS1_SHOWUPSTREAM='auto'
GIT_PS1_SHOWCOLORHINTS='true'
GIT_PS1_STATESEPARATOR=''
if [ "$(id -u)" -eq 0 ]; then
    __prompt_sign='#'
    __prompt_color="${C_RED}"
    __prompt_color_bg="${B_RED}"
else
    __prompt_sign='$'
    __prompt_color="${C_BLUE}"
    __prompt_color_bg="${B_BLUE}"
    if [ "${__NV_PRIME_RENDER_OFFLOAD}" == '1' ] && [ "${__GLX_VENDOR_LIBRARY_NAME}" == 'nvidia' ]; then
        __prompt_color="${C_GREEN}"
        #__prompt_color_bg="${B_GREEN}"
    fi
fi
__PROMPT_SIGN="${__prompt_sign}"

function colorpwd {
    echo "${PWD////${C_YELLOW}/${C_NONE}}"
}
function __colorpwd {
    echo '${PWD////${C_YELLOW}/${C_NONE}}'
}
function __prompt_err {
    local ERR="${PIPESTATUS[-1]}"
    [ "${ERR}" -ne 0 ] && echo -ne " ${C_RED}(${ERR})${C_NONE}"
}
function __git_head {
    git rev-parse --short HEAD 2>/dev/null
}
function __prompt_git {
    command -v __git_ps1 &>/dev/null && echo -n '$(__git_ps1 " ${C_GREEN}{%s,$(__git_head)}${C_NONE}")'
}
function __prompt_git_eval {
    eval "echo \"$(__prompt_git)\""
}
PS1="\[${F_RESET}\]\[${__prompt_color_bg}\]  \[${B_NONE}\] $(__colorpwd) \[${__prompt_color}\][\u@\H]\[${C_NONE}\]$(__prompt_git)\$(__prompt_err)\n\[${__prompt_color_bg}\] \[${B_NONE}\]\[${__prompt_color}\]\${__PROMPT_SIGN}\[${C_NONE}\] "
PS2="\[${__prompt_color_bg}\] \[${B_NONE}\]\[${__prompt_color}\]>\[${C_NONE}\] "

if [ "${__PROMPT_INDENT}" -eq '0' ]; then
    PS1="\[${F_RESET}\]${debian_chroot:+($debian_chroot)}\[${__prompt_color}\]\u\[${C_NONE}\]@\H:\[${__prompt_color}\]\w\[${C_NONE}\]${__prompt_sign} "
    PS2="> "
fi

function __prompt_sign_update {
    __PROMPT_SIGN="${__prompt_sign}"
    test -o history || __PROMPT_SIGN='-' || true
    [ "${HISTFILE}" == '/dev/null' ] && __PROMPT_SIGN='-' || true
}

export HISTFILE=~/.bash_history
history -c
history -w
export HISTFILESIZE=32000
export HISTSIZE=32000
export HISTFILE=~/.bash_history-phd
export HISTFILESIZE=32000
export HISTSIZE=32000
export HISTCONTROL='ignoredups:erasedups:ignorespace'
touch "$HISTFILE"
shopt -s histappend
bind 'set revert-all-at-newline on'
function __history_cleaned {
    awk \
        '{ gsub(/^[ \t]+|[ \t]+$/, "", $0); lines[n++]=$0; seen[$0]++; } END { for (i=0; i<n; i++) { if (!(--seen[lines[i]])) { print(lines[i]); } } }' \
        "$HISTFILE"
}
function __history_clean {
    echo "$(__history_cleaned)" > "$HISTFILE"
}
function __history_append {
    history -a
    __history_clean
}
function __history_reload {
    history -c
    history -r
}
export PROMPT_COMMAND="__history_append; ${PROMPT_COMMAND}"
alias h='history'                                             # print history
alias hh='__history_reload'                                   # reload common history from all shells
alias hhh='e "$HISTFILE"'                                     # edit Bash history
alias HHH='E "$HISTFILE"'                                     # edit Bash history in X
alias Ehhh='E "$HISTFILE"'                                    # edit Bash history in X
alias h-='HISTFILE=/dev/null          ; __prompt_sign_update' # temporarily disable history saving for this shell
alias h+='HISTFILE=~/.bash_history-phd; __prompt_sign_update' # re-enable history saving for this shell
alias H-='set +o history              ; __prompt_sign_update' # temporarily disable history for this shell
alias H+='set -o history              ; __prompt_sign_update' # re-enable history for this shell

__prompt_sign_update

export PROMPT_COMMAND="setterm -cursor on; ${PROMPT_COMMAND}"

shopt -s autocd

mkdircd () {
    local name="$@"
    mkdir -p -- "${name}" && cd "${name}"
}
alias md='mkdir'
alias mkd='mkdir'
alias mdc='mkdircd'
alias mdcd='mkdircd'
alias mkdc='mkdircd'
alias mkdcd='mkdircd'
alias mkcd='mkdircd'
alias rd='rmdir'
alias rmF='rm -rf'

alias ls='LC_COLLATE=en_US.utf8 ls --color=auto --group-directories-first'
alias ls1='ls -1'
alias lsa='ls -a'
alias lsa1='ls -a -1'
alias l='LC_COLLATE=en_US.utf8  ls --color=auto --group-directories-first -lvF'
alias ll='LC_COLLATE=en_US.utf8 ls --color=auto --group-directories-first -lvFa'
alias ll.='ll -I "[^.]*"'
alias lll='ll.'
alias cd..='cd ..'
alias cd-='cd - &>/dev/null'
alias c='cd'
alias ..='cd ..'
alias ....='cd ../..'
alias ......='cd ../../..'
alias ..2='cd ../..'
alias ..3='cd ../../..'
alias ..4='cd ../../../..'
alias ..5='cd ../../../../..'
alias ..6='cd ../../../../../..'
alias ..7='cd ../../../../../../..'
alias ..8='cd ../../../../../../../..'
alias ..9='cd ../../../../../../../../..'
alias ...='cd .'
alias ~='cd ~'
alias c~='cd ~'
alias cd~='cd ~'
alias -- -='cd -'
alias s='sudo su'
alias sk='sudo -k'
alias sd='sudo'
alias lessf='less -n +F'
alias lessg='less -n +G'
alias scr='screen -D -R'
alias scrr='screen -D -r'
alias scrl='screen -list'
alias scrw='screen -wipe'
alias exit='clear; exit'
alias logout='clear; logout'
alias q='clear; exit'
alias top='top -d 0,5'
alias git='LANG=en_US.UTF-8 git'
alias g='git'
alias gitgui='x git gui'
alias gg='gitgui'
alias grep='grep --color=auto'
alias grepE='grep -E'
alias axel='axel --user-agent="Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefox/68.0"'
alias axel2='axel -n 2'
alias axel3='axel -n 3'
alias axel4='axel -n 4'
alias axel5='axel -n 5'
alias axel10='axel -n 10'
alias axel15='axel -n 15'
alias axel20='axel -n 20'
alias axel25='axel -n 25'
alias axel30='axel -n 30'
alias aptu='sudo apt update'
alias ap-u='sudo apt update'
alias ap-key='sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys'
alias sedn='sed -E -e "1h;2,\$H;\$!d;g"'
alias sedne='sedn -e'
alias gitq='qgit'
alias m='make'
alias gk='gitk'
alias k='gitk'
alias ka='gitk --all'
alias qg='qgit'
alias gq='qgit'
alias e="${__EDITOR}"
alias se="sudo ${__EDITOR}"
alias E="x ${__XEDITOR}"
alias EE="x ${__XEDITOR2}"
alias K='x kate'
alias KW='x kwrite'
alias KD='x kdevelop'
alias C='x codium'
alias I='x intellij-idea-community'
alias err='tee /dev/stderr'
alias out='tee /dev/tty'
alias t='tee /dev/tty'
alias dm='sudo dmesg'
alias dmw='sudo dmesg -w'
alias psaux='ps aux'
alias psauf='ps auf'
alias psaufx='ps aufx'
alias du0='du -d 0'
alias du1='du -d 1'
alias du2='du -d 2'
alias du3='du -d 3'
alias duh='du -h'
alias duh0='du -h -d 0'
alias duh1='du -h -d 1'
alias duh2='du -h -d 2'
alias duh3='du -h -d 3'
alias dfh='df -h'
alias unamea='uname -a'
alias wh='which'
alias xargsn='xargs -d "\n"'
alias xargs1='xargs -r -n1'
alias xargsn1='xargs -d "\n" -r -n1'
alias xa1='xargs -r -n1'
alias reboot?='[ -f /var/run/reboot-required ] && echo YES || echo no'
alias reboot!='sudo reboot'
alias reboot?!='[ -f /var/run/reboot-required ] && (echo YES; sudo reboot || true) || echo no'
alias u+r='chmod u+r'
alias u-r='chmod u-r'
alias u+w='chmod u+w'
alias u-w='chmod u-w'
alias u+x='chmod u+x'
alias u-x='chmod u-x'
alias u+rw='chmod u+rw'
alias u-rw='chmod u-rw'
alias u+rx='chmod u+rx'
alias u-rx='chmod u-rx'
alias u+wx='chmod u+wx'
alias u-wx='chmod u-wx'
alias u+rwx='chmod u+rwx'
alias u-rwx='chmod u-rwx'
alias g+r='chmod g+r'
alias g-r='chmod g-r'
alias g+w='chmod g+w'
alias g-w='chmod g-w'
alias g+x='chmod g+x'
alias g-x='chmod g-x'
alias g+rw='chmod g+rw'
alias g-rw='chmod g-rw'
alias g+rx='chmod g+rx'
alias g-rx='chmod g-rx'
alias g+wx='chmod g+wx'
alias g-wx='chmod g-wx'
alias g+rwx='chmod g+rwx'
alias g-rwx='chmod g-rwx'
alias o+r='chmod o+r'
alias o-r='chmod o-r'
alias o+w='chmod o+w'
alias o-w='chmod o-w'
alias o+x='chmod o+x'
alias o-x='chmod o-x'
alias o+rw='chmod o+rw'
alias o-rw='chmod o-rw'
alias o+rx='chmod o+rx'
alias o-rx='chmod o-rx'
alias o+wx='chmod o+wx'
alias o-wx='chmod o-wx'
alias o+rwx='chmod o+rwx'
alias o-rwx='chmod o-rwx'
alias a+r='chmod a+r'
alias a-r='chmod a-r'
alias a+w='chmod a+w'
alias a-w='chmod a-w'
alias a+x='chmod a+x'
alias a-x='chmod a-x'
alias a+rw='chmod a+rw'
alias a-rw='chmod a-rw'
alias a+rx='chmod a+rx'
alias a-rx='chmod a-rx'
alias a+wx='chmod a+wx'
alias a-wx='chmod a-wx'
alias a+rwx='chmod a+rwx'
alias a-rwx='chmod a-rwx'
alias demangle='c++filt'
alias bashtrack='strace -e execve -b execve -f -qqv -e signal="!all" bash'
alias lsb-release='cat /etc/lsb-release'

#which colormake &>/dev/null && alias make='colormake'

function cd {
    local args=''
    while [[ "$1" == '-'?* ]]; do
        if [ "$1" == '--' ]; then
            shift
            break
        fi
        args+=" $1"
        shift
    done
    local where="$@"
    if [ -z "${where}" ]; then
        where="${HOME}"
    elif [ -e "${where}" ] && [ ! -d "${where}" ]; then
        where="$(dirname "${where}")"
    fi
    builtin cd $args -- "${where}" || return "${?}"
    # skip for Konsole KPart:
    [ -n "${KONSOLE_VERSION}" ] && [ "${WINDOWID}" = '0' ] && return '0'
    [ ! "${__CD_LS}" -eq '1' ] && return '0'
    if [ "${__PROMPT_INDENT}" -eq '1' ]; then
        echo "${B_GREEN}  ${B_NONE} $(colorpwd)$(__prompt_git_eval)"
        LC_COLLATE='en_US.utf8' COLUMNS="$((${COLUMNS}-3))" ls --group-directories-first -C --color=always | sed -e "s,^,${B_GREEN} ${B_NONE}  ,"
    else
        echo "=== $(pwd) ==="
        LC_COLLATE='en_US.utf8' COLUMNS="$((${COLUMNS}-3))" ls --group-directories-first -C --color=always
    fi
}

function CD {
    builtin cd "$@"
}

function . {
    [ -z "$@" ] && cd . || source "$@"
}

function C! {
    command ${@}
}

function b {
    (
        exec &>/dev/null
        ${@} & disown
    )
}

function x {
    local args="$@"
    local input="$([ ! -t 0 ] && cat)"
    (
        exec &>/dev/null
        xargs ${args} <<<"${input}" & disown
    )
}

function F {
    find . -name "$@"
}

function G {
    grep -r --color=auto  -F    "$@" .
}
function GE {
    grep -r --color=auto  -E    "$@" .
}
function Gl {
    grep -r --color=never -F -l "$@" .
}
function GEl {
    grep -r --color=never -E -l "$@" .
}

function wgetr {
    wget --referer=${1:-} ${1:-}
}

function slowcat {
    perl -pe "system 'sleep ${2:-.020}'" ${1:-}
}

function ap {
    local args="$@"
    sudo bash -c "aptitude ${args} && (uname -sr | (boxes -d stone 2>/dev/null || cat)) && apt-get --purge autoremove && apt-get clean"
    sudo -K
    echo -n 'Reboot: '; reboot?
}
alias ap-fo='ap -o Dpkg::Options::="--force-overwrite"'
function ap-fix {
    sudo bash -c "dpkg --configure -a; apt-get update --fix-missing; apt-get install -f; apt-get clean"
}
function ap! {
    ap-fix
    ap
}

function gitk {
    git status; x gitk $@
}

function ssha {
    eval `ssh-agent`
    ssh-add ~/.ssh/*.pem ~/.ssh/*_rsa
}
alias sshal='ssh-add -l'
alias sshak='eval `ssh-agent -k`'

function ssh-server-keys {
    ssh-keyscan ${1:-localhost} 2>/dev/null | ssh-keygen -lf - | column -t
}

function copy {
    cat "$@" | xclip -sel c
}

function cb {
    local args="$@"
    if [ -n "${args}" ]; then
        xclip -sel c <<< "${args}"
    elif [ ! -t 0 ]; then
        xclip -sel c
    else
        xclip -sel c -o 2>/dev/null || true
    fi
}
function CB {
    local args="$@"
    if [ -n "${args}" ]; then
        xclip -sel c <<< "${args}"
    elif [ ! -t 0 ]; then
        xclip -sel c
    fi
    xclip -sel c -o 2>/dev/null || true
}

function kman {
    x konqueror "man:/$@"
}

function mpv {
    /usr/bin/mpv "$@"
    local err="$?"
    if [ "${err}" -ne '0' ]; then
        kdialog --title 'MPV' --error "Running MPV failed."
    fi
    return "${err}"
}

function topcpu {
    echo `ps x -o pid=,pcpu=,comm= --sort -pcpu | head -n 1`
}

function topmem {
    echo `ps x -o pid=,rss=,comm= --sort -rss | head -n 1`
}

function wgets {
    local k=1
    local numbered=0
    if [ "$1" == '-n' ]; then
        numbered=1
        shift
    fi
    local url
    while read url; do
        url=$(trim "${url}")
        [ -z "${url}" ] && continue
        local name="$(basename "${url}")"
        local kstr=''
        if [ "${numbered}" == 1 ]; then
            kstr="${k} - "
        fi
        local kname="${kstr}${name}"
        wget                                                                       \
             --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 \
             --retry-on-http-error=503,429                                         \
             -c --referer "${url}" "${url}" -O "${kname}"                          \
             || true
        ((k++)) || true
    done < <(echo $@ | tr ' ' '\n'; cat)
}
alias wgetsn='wgets -n'

function nv {
    local args="$@"
    __NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia ${args:-bash}
}

function server-http {
    python -m http.server "$@"
}

function server-http-php {
    local port="${1:-8000}"
    shift
    php -S "0.0.0.0:${port}" "$@"
}

function find-case-duplicated-files {
    find . | tr 'A-Z' 'a-z' | sort | uniq -D | sort -u
}

function wine-remove-extensions {
    rm -f ~/.local/share/mime/packages/x-wine*
    rm -f ~/.local/share/applications/wine-extension*
    rm -f ~/.local/share/icons/hicolor/*/*/application-x-wine-extension*
    rm -f ~/.local/share/mime/application/x-wine-extension*
}

function whatismyip {
    while true; do
        dig @resolver4.opendns.com myip.opendns.com +short             \
            | grep -E --color=never '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$' \
            && break || true
        sleep 1
    done
}

function ovh-dyndns {
    local HOST="${1:-${HOSTNAME}}"
    read -e -p 'Hostname: ' -i "${HOST}" HOST
    local SUB="${HOST%.*.*}"
    local DOMAIN="${HOST:${#SUB}+1}"
    local USER="${DOMAIN}-${SUB}"
    read -e -p 'Username: ' -i "${USER}" USER
    local IP="${2:-$(whatismyip)}"
    read -e -p 'IP: ' -i "${IP}" IP
    local REPLY=$(LANG=C wget                                                      \
        --quiet                                                                    \
        --ask-password                                                             \
        --user "${USER}"                                                           \
        "https://www.ovh.com/nic/update?system=dyndns&hostname=${HOST}&myip=${IP}" \
        -O- || echo 'Error.')
    echo "$REPLY"
}

if [ -f ~/.bashrc-ssh ]; then
    . ~/.bashrc-ssh
fi
